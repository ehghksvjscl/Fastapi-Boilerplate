name: TEST

on: [push]

env:
  APP_ENV: test

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_USER: admin
          MYSQL_PASSWORD: 1234
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      # MySQL 서비스 될 때까지 대기
      - name: Postgres health check
        env:
          PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          while ! postgresadmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done
      # 파이썬 설정
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      # 디펜더시 설치
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      # 테스트
      - name: Test Code
        env:
          TESTING: true
          TELEGRAM_BOT_TOKEN: 123:sometoken
          DB_USERNAME: admin
          DB_PASSWORD: 1234
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_NAME: testing
        run: |
          pytest
          zip -r9 report.zip htmlcov/
      # 테스트 결과
      - uses: actions/upload-artifact@v2
        name: Upload Artifact
        with:
          name: REPORT
          path: report.zip
